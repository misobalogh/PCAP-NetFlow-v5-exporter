def parse_hex_data(hex_string):
    # Convert hex string to bytes
    byte_data = bytes.fromhex(hex_string)

    # header (first 24 bytes)
    version = int.from_bytes(byte_data[0:2], 'big')
    count = int.from_bytes(byte_data[2:4], 'big')
    sys_uptime = int.from_bytes(byte_data[4:8], 'big')
    unix_secs = int.from_bytes(byte_data[8:12], 'big')
    unix_nsecs = int.from_bytes(byte_data[12:16], 'big')
    flow_sequence = int.from_bytes(byte_data[16:20], 'big')

    print(f"Version: {version}, Count: {count}, Sys Uptime: {sys_uptime}, Unix Seconds: {unix_secs}")

    # Parse each flow record
    for i in range(count):
        offset = 24 + i * 48  # 24 for header, 48 per flow record
        record = byte_data[offset:offset + 48]
        src_addr = '.'.join(str(b) for b in record[0:4])
        dst_addr = '.'.join(str(b) for b in record[4:8])
        nexthop = int.from_bytes(record[8:12], 'big')
        inp = int.from_bytes(record[12:14], 'big')
        outp = int.from_bytes(record[14:16], 'big')
        dPkts = int.from_bytes(record[16:20], 'big')
        dOctets = int.from_bytes(record[20:24], 'big')
        first = int.from_bytes(record[24:28], 'big')
        last = int.from_bytes(record[28:32], 'big')
        src_port = int.from_bytes(record[32:34], 'big')
        dst_port = int.from_bytes(record[34:36], 'big')
        pad1 = int.from_bytes(record[36:37], 'big')
        tcp_flags = int.from_bytes(record[37:38], 'big')
        prot = int.from_bytes(record[38:39], 'big')
        tos = int.from_bytes(record[39:40], 'big')
        src_as = int.from_bytes(record[40:42], 'big')
        dst_as = int.from_bytes(record[42:44], 'big')
        src_mask = int.from_bytes(record[44:45], 'big')
        dst_mask = int.from_bytes(record[45:46], 'big')
        pad2 = int.from_bytes(record[46:48], 'big')

        if prot != 6: # Only TCP
            continue
        print(f"Flow {i}: {src_addr}:{src_port} -> {dst_addr}:{dst_port}, First: {first}, Last: {last}, Packets: {dPkts}, Octets: {dOctets}")


if __name__ == "__main__":
    # Example usage
    hex_data = "0005001d0000000067001e00321fc1b000000078000000004d4b4fc3c0a8323600000000000000000000000b000018c61a1448991a144b0801bb830e001b06000000000000000000c0a832364d4b4fc300000000000000000000000f0000063c1a1448991a144b08830e01bb001b060000000000000000004d4b4fc3c0a8323600000000000000000000000c000018fa1a1448b71a144afc01bb8336001b06000000000000000000c0a832364d4b4fc3000000000000000000000010000006701a1448b71a144afc833601bb001b060000000000000000004d4b4dc3c0a8323600000000000000000000000c000018fa1a1448d31a144b0801bb9b1c001b06000000000000000000c0a832364d4b4dc300000000000000000000000f0000063c1a1448d31a144b089b1c01bb001b060000000000000000004d4b4dc3c0a8323600000000000000000000000b000018dc1a1449221a144b3101bb9b4e001b06000000000000000000c0a832364d4b4dc3000000000000000000000010000006701a1449221a144b319b4e01bb001b060000000000000000004d4b4dc3c0a8323600000000000000000000000b000018c61a1449231a144b3101bb9b56001b06000000000000000000c0a832364d4b4dc300000000000000000000000f0000063c1a1449231a144b319b5601bb001b060000000000000000004d4b4dc3c0a8323600000000000000000000000b000018c61a1449231a144b3101bb9b64001b06000000000000000000c0a832364d4b4dc300000000000000000000000f0000063c1a1449231a144b319b6401bb001b060000000000000000004d4b4fc3c0a8323600000000000000000000000b000018c61a14492b1a144b3101bb8350001b06000000000000000000c0a832364d4b4fc3000000000000000000000010000006701a14492b1a144b31835001bb001b060000000000000000004d4b4fc3c0a8323600000000000000000000000c000018f11a144b461a144b8e01bb835e001b06000000000000000000c0a832364d4b4fc300000000000000000000000e000006081a144b461a144b8e835e01bb001b060000000000000000007f0000017f0000350000000000000000000000040000011c1a144b761a144b77bb3e00350000110000000000000000007f0000357f000001000000000000000000000004000003881a144b761a144b770035bb3e0000110000000000000000007f0000017f000035000000000000000000000004000001141a144b7c1a144b7c9f1b00350000110000000000000000007f0000357f0000010000000000000000000000040000016c1a144b7c1a144b7c00359f1b0000110000000000000000007f0000017f0000350000000000000000000000040000011c1a144bb51a144bb6a9d800350000110000000000000000007f0000357f000001000000000000000000000004000003881a144bb51a144bb60035a9d80000110000000000000000008fccd68dc0a83236000000000000000000000001000000341a1443561a1443730050befa001006000000000000000000c0a832368fccd68d000000000000000000000001000000341a1443561a144373befa00500010060000000000000000004d4b4fdec0a8323600000000000000000000006000019dd51a14477a1a1448ee01bbe3a2001a06000000000000000000c0a832364d4b4fde00000000000000000000004e000015db1a14477a1a1448eee3a201bb001a060000000000000000002278d07bc0a83236000000000000000000000007000002131a1448281a14493e01bb9e0e001806000000000000000000c0a832362278d07b0000000000000000000000060000077f1a1448281a14493e9e0e01bb0018060000000000000000007f0000017f000001000000000000000000000014000007e61a143eac1a144a65dae018eb001806000000000000000000"
    parse_hex_data(hex_data)
